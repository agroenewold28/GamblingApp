/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gamblingapp;

import javax.swing.JOptionPane;
/**
 *
 * @author Alex
 */
public class GameGUI extends javax.swing.JFrame {
    static Setting curSetting;
    static Opposition curPlayer;
    Boolean knock;
    
    /**
     * Creates new form GameGUI
     */
    public GameGUI() {
        initComponents();
        knock = false;
        nameTextField.setText(GamblingApp.player.name);
        moneyTextField.setText("$" + String.valueOf(GamblingApp.player.balance));
        settingTextField.setText(curSetting.name);
        DirectionsTextField.setText(curSetting.ruleMessage);
        SettingSelectorWindow.curGame.addPlayers();
        SettingSelectorWindow.curGame.shuffleCards();
        SettingSelectorWindow.curGame.dealCards();
        curPlayer = SettingSelectorWindow.curGame.players.get(0);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        label1 = new java.awt.Label();
        label2 = new java.awt.Label();
        settingTextField = new javax.swing.JTextField();
        DirectionsTextField = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        nameTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        moneyTextField = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        upsideDeckField = new javax.swing.JTextField();
        textArea = new java.awt.TextArea();
        jLabel4 = new javax.swing.JLabel();
        topPileButton = new javax.swing.JButton();
        upsideDeckButton = new javax.swing.JButton();
        knockButton = new javax.swing.JButton();
        play31Button = new javax.swing.JButton();
        nextTurnBtn = new javax.swing.JButton();
        startButton = new javax.swing.JButton();
        discardButton = new javax.swing.JButton();

        label1.setText("label1");

        label2.setText("label2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        settingTextField.setEditable(false);

        DirectionsTextField.setEditable(false);

        jLabel1.setText("Name:");

        nameTextField.setEditable(false);

        jLabel2.setText("Money:");

        moneyTextField.setEditable(false);

        jLabel3.setText("Discard Pile:");

        upsideDeckField.setEditable(false);

        textArea.setEditable(false);

        jLabel4.setText("Options:");

        topPileButton.setText("Draw from top pile");
        topPileButton.setEnabled(false);
        topPileButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                topPileButtonActionPerformed(evt);
            }
        });

        upsideDeckButton.setText("Draw from discard pile");
        upsideDeckButton.setEnabled(false);
        upsideDeckButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upsideDeckButtonActionPerformed(evt);
            }
        });

        knockButton.setText("Knock!");
        knockButton.setEnabled(false);
        knockButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                knockButtonActionPerformed(evt);
            }
        });

        play31Button.setText("Play your 31!");
        play31Button.setEnabled(false);
        play31Button.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                play31ButtonActionPerformed(evt);
            }
        });

        nextTurnBtn.setText("Next Turn");
        nextTurnBtn.setEnabled(false);
        nextTurnBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nextTurnBtnActionPerformed(evt);
            }
        });

        startButton.setText("Start");
        startButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                startButtonActionPerformed(evt);
            }
        });

        discardButton.setText("Discard");
        discardButton.setEnabled(false);
        discardButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                discardButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel4)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 142, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(discardButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(upsideDeckButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 159, Short.MAX_VALUE)
                                    .addComponent(topPileButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(knockButton, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(play31Button, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                        .addComponent(jLabel2)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(moneyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 62, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(0, 0, Short.MAX_VALUE)))
                                .addGap(24, 24, 24)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(textArea, javax.swing.GroupLayout.PREFERRED_SIZE, 437, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nextTurnBtn)))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(92, 92, 92)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(upsideDeckField)))
                .addContainerGap())
            .addComponent(DirectionsTextField)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(settingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(276, 276, 276))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(startButton)
                        .addGap(289, 289, 289))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(settingTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(DirectionsTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(startButton)
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(nameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(upsideDeckField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel2)
                            .addComponent(moneyTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel4)
                        .addGap(12, 12, 12)
                        .addComponent(discardButton)
                        .addGap(18, 18, 18)
                        .addComponent(topPileButton)
                        .addGap(18, 18, 18)
                        .addComponent(upsideDeckButton)
                        .addGap(18, 18, 18)
                        .addComponent(knockButton)
                        .addGap(18, 18, 18)
                        .addComponent(play31Button))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(34, 34, 34)
                        .addComponent(nextTurnBtn)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 30, Short.MAX_VALUE)
                        .addComponent(textArea, javax.swing.GroupLayout.PREFERRED_SIZE, 284, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(34, 34, 34))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nextTurnBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nextTurnBtnActionPerformed
        // TODO add your handling code here:
        SettingSelectorWindow.curGame.nextTurn();
        if(curPlayer == SettingSelectorWindow.curGame.knockingPlayer)
            SettingSelectorWindow.curGame.terminateGame();
        else if(curPlayer == SettingSelectorWindow.curGame.players.get(0)){
            this.appendHand(false);
            if(!knock)
                knockButton.setEnabled(this.enableKnock(curPlayer));
            nextTurnBtn.setEnabled(false);
            play31Button.setEnabled(this.enable31(curPlayer));
            topPileButton.setEnabled(true);
            upsideDeckButton.setEnabled(true);
        }
        else{
            int i;
            for(i = 0; i < SettingSelectorWindow.curGame.players.size(); i++){
               if(curPlayer == SettingSelectorWindow.curGame.players.get(i))
                   break;               
            }
            this.disableAllButDiscard();
            curPlayer.setCurSuit();
            if(curPlayer.thirtyOnePresent()){
                JOptionPane.showMessageDialog(null, "Opponent " + i + " has 31");
                SettingSelectorWindow.curGame.terminateGame();
            }
            else if(curPlayer.setKnockPerformed() && !knock){
                JOptionPane.showMessageDialog(null, "Opponent " + i + " knocked");
                knock = true;
                SettingSelectorWindow.curGame.knockPerformed();
            }
            else{
                curPlayer.computeOppositionMove();
                if(curPlayer.topPileDrawn){
                    curPlayer.computeDiscard();
                    textArea.append("Opponent " + i + " drawed from the top pile and discarded a " + this.printCard(GameController.discardPileCard, 0, true));
                    textArea.append("\n");
                }
                else{
                    curPlayer.computeDiscard();
                    textArea.append("Opponenet " + i + " picked up a " + this.printCard(GameController.oldCard, 0, true) + " from the discard pile and discarded a " + this.printCard(GameController.discardPileCard, 0, true));
                    textArea.append("\n");
                }               
            }
        }
    }//GEN-LAST:event_nextTurnBtnActionPerformed

    private void topPileButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_topPileButtonActionPerformed
        // TODO add your handling code here:
        GamblingApp.player.drawFromTopPile();
        this.appendHand(true);
        discardButton.setEnabled(true);
        this.disableAllButDiscard();
    }//GEN-LAST:event_topPileButtonActionPerformed

    private void upsideDeckButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upsideDeckButtonActionPerformed
        // TODO add your handling code here:
        GamblingApp.player.drawFromDiscardPile();
        this.appendHand(true);
        discardButton.setEnabled(true);
        this.disableAllButDiscard();
    }//GEN-LAST:event_upsideDeckButtonActionPerformed

    private void knockButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_knockButtonActionPerformed
        // TODO add your handling code here:
        knock = true;
        SettingSelectorWindow.curGame.knockPerformed();
        this.disableAllButDiscard();
        discardButton.setEnabled(false);
        nextTurnBtn.setEnabled(true);
    }//GEN-LAST:event_knockButtonActionPerformed

    private void play31ButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_play31ButtonActionPerformed
        // TODO add your handling code here:
        SettingSelectorWindow.curGame.terminateGame();
    }//GEN-LAST:event_play31ButtonActionPerformed

    private void startButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_startButtonActionPerformed
        // TODO add your handling code here:
        SettingSelectorWindow.curGame.playerTurn(true);
        curPlayer = SettingSelectorWindow.curGame.players.get(0);
        knockButton.setEnabled(this.enableKnock(curPlayer));
        play31Button.setEnabled(this.enable31(curPlayer));
        nextTurnBtn.setEnabled(false);
        topPileButton.setEnabled(true);
        upsideDeckButton.setEnabled(true);
        startButton.setEnabled(false);
        this.appendHand(false);
        this.setUpsideDeck();
    }//GEN-LAST:event_startButtonActionPerformed

    private void discardButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_discardButtonActionPerformed
        // TODO add your handling code here:
        String cards[] = {this.printCard(curPlayer.playerCards.get(0), 0, true),
            this.printCard(curPlayer.playerCards.get(1), 0, true),
            this.printCard(curPlayer.playerCards.get(2), 0, true),
            this.printCard(curPlayer.playerCards.get(3), 0, true)};
        int choice = JOptionPane.showOptionDialog(
                null,
                "Which of your cards would you like to discard?",
                "Select a card to discard",
                JOptionPane.DEFAULT_OPTION,
                JOptionPane.PLAIN_MESSAGE,
                null,
                cards,
                null);
        GameController.discardPileCard = curPlayer.playerCards.get(choice);
        curPlayer.discard(curPlayer.playerCards.get(choice));
        nextTurnBtn.setEnabled(true);
        this.appendHand(true);
        this.setUpsideDeck();
        discardButton.setEnabled(false);
    }//GEN-LAST:event_discardButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameGUI().setVisible(true);
            }
        });
    }
    
    public static void setSetting(Setting s){
        curSetting = s;
    }

    public void setUpsideDeck(){
        Card c = GameController.discardPileCard;
        if(c.tempValue > 10)
            upsideDeckField.setText(c.faceValue + " of " + c.suit);
        else
            upsideDeckField.setText(c.value + " of " + c.suit);
    }
    
    private void appendHand(Boolean update){
        if(update)
            textArea.setText("Your hand now is: ");
        else
            textArea.setText("Current hand: ");
        for(int i = 0; i < GamblingApp.player.playerCards.size(); i++){
            textArea.append(this.printCard(curPlayer.playerCards.get(i), i, false));
        }
        textArea.append("\n");
    }
    
    private String printCard(Card c, int i, Boolean b){
        String temp;
        if(i == curPlayer.playerCards.size() - 1){
            if(c.tempValue > 10){
                temp = "and a " + c.faceValue + " of " + c.suit;
                return temp;
            }
            else{
                temp = "and a " + c.value + " of " + c.suit;
                return temp;
            }
        }
        else if(b){
            if(c.tempValue > 10){
                temp = c.faceValue + " of " + c.suit;
                return temp;
            }
            else{
                temp = c.value + " of " + c.suit;
                return temp;
            }
        }
        else{
            if(c.tempValue > 10){
                temp = c.faceValue + " of " + c.suit + ", ";
                return temp;
            }
            else{
                temp = c.value + " of " + c.suit + ", ";
                return temp;
            }
        }
    }
    
    private Boolean enableKnock(Opposition opp){
        if(this.getPlayerSum(opp) >= 21)
            return true;
        else
            return false;
    }
    
    private Boolean enable31(Opposition opp){
        if(this.getPlayerSum(opp) == 31)
            return true;
        else 
            return false;
    }
            
    public int getPlayerSum(Opposition opp){
        int sum = 0;
        for(Card c : opp.playerCards){
            if(c.suit.equals(opp.curSuit))
                sum += c.value;
        }
        return sum;
    }
    
    private void disableAllButDiscard(){
        topPileButton.setEnabled(false);
        knockButton.setEnabled(false);
        upsideDeckButton.setEnabled(false);
        play31Button.setEnabled(false);
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DirectionsTextField;
    private javax.swing.JButton discardButton;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton knockButton;
    private java.awt.Label label1;
    private java.awt.Label label2;
    private javax.swing.JTextField moneyTextField;
    private javax.swing.JTextField nameTextField;
    private javax.swing.JButton nextTurnBtn;
    private javax.swing.JButton play31Button;
    private javax.swing.JTextField settingTextField;
    private javax.swing.JButton startButton;
    private java.awt.TextArea textArea;
    private javax.swing.JButton topPileButton;
    private javax.swing.JButton upsideDeckButton;
    private javax.swing.JTextField upsideDeckField;
    // End of variables declaration//GEN-END:variables
}
